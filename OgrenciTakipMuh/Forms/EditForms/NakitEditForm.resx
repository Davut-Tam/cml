<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>